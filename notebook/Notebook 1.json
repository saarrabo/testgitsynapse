{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "testpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "ab39997d-b09f-444c-ab89-9858033dad6f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"05a22406-4ac5-40b3-8666-b53bedad16dc": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "Basher",
										"1": "bash@edureka.co",
										"2": "100000"
									},
									{
										"0": "Daniel",
										"1": "daniel@stanford.edu",
										"2": "120000"
									},
									{
										"0": "Muriel",
										"1": "muriel@waterloo.edu",
										"2": "140000"
									},
									{
										"0": "Rachel",
										"1": "rach_3@edureka.co",
										"2": "160000"
									},
									{
										"0": "Zach",
										"1": "zach_g@edureka.co",
										"2": "160000"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "firstName",
										"type": "string"
									},
									{
										"key": "1",
										"name": "email",
										"type": "string"
									},
									{
										"key": "2",
										"name": "salary",
										"type": "bigint"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"2"
									],
									"isStacked": false
								}
							}
						}
					},
					"b6958a30-6b4b-4b4e-bf6f-17da2df7be31": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "Basher",
										"1": "HR"
									},
									{
										"0": "Daniel",
										"1": "OPS"
									},
									{
										"0": "Rachel",
										"1": "FN"
									},
									{
										"0": "Zach",
										"1": "DEV"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "firstName",
										"type": "string"
									},
									{
										"key": "1",
										"name": "name",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "count",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e342c2c0-f844-4b18-9208-52c8c234c30e/resourceGroups/sds-test/providers/Microsoft.Synapse/workspaces/sds-test/bigDataPools/testpool",
				"name": "testpool",
				"type": "Spark",
				"endpoint": "https://sds-test.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import random\r\n",
					"\r\n",
					"session_id = random.randint(0,1000000)\r\n",
					"delta_table_path = \"/delta/delta-table-{0}\".format(session_id)\r\n",
					"\r\n",
					"delta_table_path"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"data = spark.range(0,5)\r\n",
					"data.show()"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql import *\r\n",
					"\r\n",
					"Employee = Row(\"firstName\", \"email\", \"salary\")\r\n",
					"\r\n",
					"employee1 = Employee('Basher', 'bash@edureka.co', 100000)\r\n",
					"employee2 = Employee('Daniel', 'daniel@stanford.edu', 120000 )\r\n",
					"employee3 = Employee('Muriel', 'muriel@waterloo.edu', 140000 )\r\n",
					"employee4 = Employee('Rachel', 'rach_3@edureka.co', 160000 )\r\n",
					"employee5 = Employee('Zach', 'zach_g@edureka.co', 160000 )\r\n",
					"\r\n",
					"print(Employee[0])\r\n",
					"\r\n",
					"print(employee3)\r\n",
					"\r\n",
					"department1 = Row(firstName='Basher', name='HR')\r\n",
					"department2 = Row(firstName='Daniel', name='OPS')\r\n",
					"department3 = Row(firstName='Rachel', name='FN')\r\n",
					"department4 = Row(firstName='Zach', name='DEV')\r\n",
					"\r\n",
					"Employees_df = [employee1, employee2, employee3, employee4, employee5]\r\n",
					"dframe = spark.createDataFrame(Employees_df)\r\n",
					"display(dframe)\r\n",
					"dframe.show()\r\n",
					"\r\n",
					"Department_df = [department1, department2, department3, department4]\r\n",
					"dframe2 = spark.createDataFrame(Department_df)\r\n",
					"display(dframe2)\r\n",
					"dframe2.show()"
				],
				"attachments": null,
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dframe.write.format(\"delta\").save(\"/delta/EmployeeDeltaTable\")\r\n",
					"dframe2.write.format(\"delta\").save(\"/delta/DepartmentDeltaTable\")"
				],
				"attachments": null,
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}